AWSTemplateFormatVersion: '2010-09-09'
Description: Deploys a service into ECS cluster
Parameters:
  ContainerPort:
    Description: Internal port on which the container listers
    Type: Number
Resources:
  CloudwatchLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Ref AWS::StackName
      RetentionInDays: 365
  TaskDefinitionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub TaskDefinitionRole-${AWS::StackName}
      Path: /
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
          - PolicyName: !Sub task-${AWS::StackName}
            PolicyDocument:
              Statement:
                - Effect: Allow
                  Action:
                    - ssm:*
                    - kms:*
                    - sts:*
                    - s3:*
                  Resource:
                    - "*"
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      TaskRoleArn: !Ref TaskDefinitionRole
      Family: !Sub ${AWS::StackName}-task
      ContainerDefinitions:
        - Name: test-app
          Hostname: test-app
          Essential: true
          Image: 695292474035.dkr.ecr.ap-south-1.amazonaws.com/demo1:0.0.1
          Memory: 512
          Cpu: 512
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref CloudwatchLogsGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: !Sub ${AWS::StackName}-nginx
          PortMappings:
            - ContainerPort: !Ref 'ContainerPort'
  Service:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Fn::ImportValue:
            "demo-ecs-cluster"
      ServiceName: !Ref AWS::StackName
      Role: !Ref 'ServiceRole'
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      DesiredCount: 1
      HealthCheckGracePeriodSeconds: 300
      LoadBalancers:
        - ContainerName: test-app
          ContainerPort: !Ref 'ContainerPort'
          TargetGroupArn:
            Fn::ImportValue:
                "demo-targetgroup"
      TaskDefinition: !Ref 'TaskDefinition'
  ServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ServiceRole-${AWS::StackName}
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceRole
Outputs:
  ServiceArn:
    Description: ARN of the created Service.
    Value: !Ref 'Service'
